options("width")
options("width") = 120
options("width") <- 120
options(width = 120)
options(width=160)
summary(hdi_aug)
ncountries
fprobs
fprobs
theprob2
theprob2(rep(1,3),rep(1,3))
theprob(rep(1.1,3),rep(1,3))
centmat(rep(1.1,3),rep(1,3))
calcCs(rep(1.1,3))
calcCs(c(1.1,1.2,1.3))
calcCs(c(1.01,1.02,1.03))
a <- c(1,2,1)
order(a)
a[order(a)]
b <-  numeric()
b[o] <- a2
a
b
a <- sample(5, 10, TRUE)
a
b[o] <-  a2
b
a
a2
rank(a, ties.method=("max"))
a2
a
jj=1
a2
m
delta
jj
delta
delta
a2
unique(a2)
jj=1
m
delta
ua
}
a2
ua
jj=1
delta
m
inds
jj=1
m
a2
a2
da
cbind(a,a3)
fprobs
fprobs
theprob2(rep(1,3),rep(.5,3))
theprob(rep(1,3),rep(.5,3))
empprob(rep(1,3),rep(.5,3))
v
cnames
q()
n
dev.off()
names(epi)
paste(names(epi),collapse="\",\"")
paste(names(epi),collapse='","')
c('hi','hello')
paste(names(epi),collapse="','")
cbind(names(epi),newnames)
wttot
wtot
head(nepi)
.333*.4
.25*.6
.05*.6
fprobs
q()
n
# Charles Zheng
# Code for calculating simplex probabilities
empprob <- function(a,b,res0=10000) {
m1 <- length(a)
m2 <- length(b)
mat1 <- matrix(rexp(m1*res0),res0,m1)
mat2 <- matrix(rexp(m2*res0),res0,m2)
sums <- mat1 %*% a - mat2 %*% b
sum(sums > 0)/res0
}
calcCs <- function(a) {
m <- length(a)
ans <- numeric(m)
for (i in 1:m) {
ans[i] = a[i]^(m-1)/prod(a[i]-a[-i])
}
ans
}
centmat <- function(a,b) {
mat <- matrix(0,length(a),length(b))
ans <- matrix(a[row(mat)]/(a[row(mat)] + b[col(mat)]),length(a),length(b))
ans[a[row(mat)]==0] = 0
return (ans)
}
theprob <- function(a,b) {
calcCs(a) %*% centmat(a,b) %*% calcCs(b)
}
calcCs2 <- function(a){
if (length(unique(a)) == length(a)) {
return (calcCs(a))
} else {
o <- order(a)
a2 <- a[order(a)]
ua <- unique(sort(a))
k <-  length(ua)
for (jj in 1:k) {
inds <- which(a2==ua[jj])
m <- length(inds)
delta <- 1e-3 * ua[k]
if (jj > 1) delta <- min(c(delta, 1e-3 * (ua[jj] - ua[jj-1])))
if (jj < k) delta <- min(c(delta, 1e-3 * (ua[jj+1] - ua[jj])))
a2[inds] <- a2[inds] + delta * ((1:m)/(m+1) - .5)
}
a3 <- numeric()
a3[o] <- a2
return (calcCs(a3))
}
}
# theoretical probabilty in case some values a[i] = a[j]
theprob2 <-  function(a,b) {
calcCs2(a) %*% centmat(a,b) %*% calcCs2(b)
}
domprob <- function(v1,v2) {
v <- v1 - v2
if (sum(v != 0) == 0) return(0.5)
if (sum(v > 0) == 0) return(0)
if (sum(v < 0) == 0) return(1)
a <- v[v > 0]
b <- -v[v < 0]
return (theprob2(a,b))
}
# In this example I compute the probability that 1*X1+2*X2+3*X3-4*X4-5*X5-6*X6
a <- c(1,2,3)
b <- c(4,5,6)
empprob(a,b) # empirical probability from 10000 samples
theprob(a,b) # theoretical probability
# Calculation of HDI indices
hdi <- read.csv("HDI_formatted.csv",stringsAsFactors = FALSE)
names(hdi)
health_index <- (hdi$life_expectancy - 20)/65
health_index[health_index > 1] <- 1
mean_schooling_index <- (hdi$mean_schooling)/15
mean_schooling_index[mean_schooling_index > 1] <- 1
expected_schooling_index <- (hdi$expected_schooling)/18
expected_schooling_index[expected_schooling_index > 1] <- 1
education_index <- (mean_schooling_index + expected_schooling_index)/2
income_index <- (log(hdi$gni_per_capita) - log(100))/(log(75000)-log(100))
income_index[income_index > 1] <- 1
hdi_calc <-(health_index * education_index * income_index)^(1/3)
hdi_aug <- data.frame(hdi, health_index, education_index, income_index, hdi_calc)
head(hdi_calc)
#plot(hdi_calc, hdi$hdi2014)
bad_inds <- which(abs(hdi_calc - hdi$hdi2014) > 1e-3)
ncountries <- dim(hdi_aug)[1]
rawmat <- cbind(log(health_index), log(education_index), log(income_index))
# compute all pairwise fuzzy probs
nset <- ncountries
fprobs <- matrix(0, nset, nset)
hdidiff <- matrix(0, nset, nset)
for (ii in 1:nset) {
for (jj in 1:nset) {
v1 <- rawmat[ii, ]
v2 <- rawmat[jj, ]
fprobs[ii,jj] = domprob(v1,v2)
hdidiff[ii,jj] = hdi$hdi2014[ii] - hdi$hdi2014[jj]
}
}
names(hdi)
cnames <- paste(hdi$rank, hdi$country, sep=". ")
rownames(fprobs) <- cnames[1:nset]
colnames(fprobs) <- cnames[1:nset]
#write.csv(fprobs, "top10__hdi.csv")
xx <- as.vector(hdidiff)
yy <- as.vector(fprobs)
filt <- xx > 0
xx <- xx[filt]
yy <- yy[filt]
xx <- as.vector(hdidiff)
yy <- as.vector(fprobs)
filt <- xx > 0
xx <- xx[filt]
yy <- yy[filt]
plot(xx,yy,pch="o",main="Truth value vs. difference in HDI",
col=rgb(0.5,0.5,0.5),cex=.5,xlab="Difference in HDI", ylab="Difference in HDI")
points(xx,yy,pch="o",col=rgb(0,0,0,0.05),cex=.5)
pdf("HDI_plot.pdf")
xx <- as.vector(hdidiff)
yy <- as.vector(fprobs)
filt <- xx > 0
xx <- xx[filt]
yy <- yy[filt]
plot(xx,yy,pch="o",main="Truth value vs. difference in HDI",
col=rgb(0.5,0.5,0.5),cex=.5,xlab="Difference in HDI", ylab="Truth Value")
points(xx,yy,pch="o",col=rgb(0,0,0,0.05),cex=.5)
dev.off()
pdf("HDI_plot.pdf")
xx <- as.vector(hdidiff)
yy <- as.vector(fprobs)
filt <- xx > 0
xx <- xx[filt]
yy <- yy[filt]
plot(xx,yy,pch="o")#,main="Truth value vs. difference in HDI",
col=rgb(0.5,0.5,0.5),cex=.5,xlab="Difference in HDI", ylab="Truth Value")
points(xx,yy,pch="o",col=rgb(0,0,0,0.05),cex=.5)
dev.off()
pdf("HDI_plot.pdf")
xx <- as.vector(hdidiff)
yy <- as.vector(fprobs)
filt <- xx > 0
xx <- xx[filt]
yy <- yy[filt]
plot(xx,yy,pch="o",
col=rgb(0.5,0.5,0.5),cex=.5,xlab="Difference in HDI", ylab="Truth Value")
points(xx,yy,pch="o",col=rgb(0,0,0,0.05),cex=.5)
dev.off()
dev.off()
pdf("HDI_plot.pdf")
xx <- as.vector(hdidiff)
yy <- as.vector(fprobs)
filt <- xx > 0
xx <- xx[filt]
yy <- yy[filt]
plot(xx,yy,pch="o",
col=rgb(0.5,0.5,0.5),cex=.5,xlab="Difference in HDI", ylab="Truth Value")
points(xx,yy,pch="o",col=rgb(0,0,0,0.05),cex=.5)
dev.off()
xx <- as.vector(hdidiff)
yy <- as.vector(fprobs)
filt <- xx > 0
xx <- xx[filt]
yy <- yy[filt]
plot(xx,yy,pch="o",
col=rgb(0.5,0.5,0.5),cex=.5,xlab="Difference in HDI", ylab="Truth Value")
points(xx,yy,pch="o",col=rgb(0,0,0,0.05),cex=.5)
pdf("HDI_plot.pdf")
xx <- as.vector(hdidiff)
yy <- as.vector(fprobs)
filt <- xx > 0
xx <- xx[filt]
yy <- yy[filt]
plot(xx,yy,pch="o",
col=rgb(0.5,0.5,0.5),cex=.5,xlab="Difference in HDI", ylab="Truth Value")
points(xx,yy,pch="o",col=rgb(0,0,0,0.05),cex=.5)
dev.off()
